diff --git a/README.md b/README.md
index 0000000..1111111 100644
--- a/README.md
+++ b/README.md
@@ -1,1 +1,60 @@
-# DzikiBoT-STM32-Nucle-L432KC
+# DzikiBoT-STM32-Nucle-L432KC
+
+Projekt robota **mini-sumo** na płytce **STM32 Nucleo-L432KC**. Kod jest pisany z założeniem:
+- `main.c` ma być maksymalnie chudy,
+- cała obsługa peryferiów siedzi w osobnych plikach (`tf_luna_i2c.*`, `tcs3472.*`, `ssd1306.*`, `motor_bldc.*`, `tank_drive.*`, `debug_uart.*`, `i2c_scan.*`),
+- łatwo można przełączyć się między trybem **diagnostycznym** (OLED + UART) a późniejszym **trybem walki** (AI / logika minisumo).
+
+## Sprzęt / magistrale
+
+- **MCU:** STM32 Nucleo-L432KC
+- **I²C prawa strona:** I2C1 (PB6/PB7)
+- **I²C lewa strona:** I2C3 (PC0/PC1)
+- **Czujniki dystansu:** 2× **TF-Luna** (I²C, adres 0x10) – prawa/lewa
+- **Czujniki koloru:** 2× **TCS3472** (I²C, adres 0x29) – prawa/lewa
+- **OLED:** **SSD1306** (0x3C) na I2C1 – panel diagnostyczny „7 linii”
+- **Napęd:** 2× ESC na **TIM1**
+  - TIM1 CH1 = **PA8** → ESC **prawy**
+  - TIM1 CH4 = **PA11** → ESC **lewy**
+  - MOE włączony
+  - przy starcie: `ESC_ArmNeutral(3000);` – trzymanie neutralu ~3 s
+
+## Moduły (plan / stan)
+
+- `tf_luna_i2c.c/.h` – odczyt dystansu, siły sygnału, temp z TF-Luna, z kwalifikacją ramek
+- `tcs3472.c/.h` – odczyt koloru / jasności ringu (prawa/lewa)
+- `ssd1306.c/.h`, `oled_panel.c/.h` – diagnostyka na ekranie (tytuł + Dist/Str/Temp + RGB L/R)
+- `motor_bldc.c/.h` – wyjście PWM na ESC (TIM1), neutral, rampa
+- `tank_drive.c/.h` – 2 silniki, rampa, okno martwe, drive test
+- `debug_uart.c/.h`, `i2c_scan.c/.h`, `config.c/.h` – debug, skan I²C, parametry w jednym miejscu
+
+## Logika w `main.c`
+
+W działającej wersji `main.c` robi:
+1. `HAL_Init()` + konfiguracja zegara
+2. `MX_GPIO_Init()`, `MX_USART2_UART_Init()`, `MX_I2C1_Init()`, `MX_TIM1_Init()`, `MX_I2C3_Init()`
+3. `DebugUART_Init()` + `I2C_Scan_All()`
+4. Inicjacja TF-Luna (R/L), TCS3472 (R/L), OLED
+5. `ESC_Init()` + `ESC_ArmNeutral(3000)`
+6. `Tank_Init()` + `DriveTest_Start()`
+7. Pętla: cykliczne odświeżanie silników + czujników + OLED + UART
+
+> Ta kolejność jest ważna – zmiana kolejności potrafi zatrzymać OLED i czujniki.
+
+## Temperatura TF-Luna
+
+Jeśli TF-Luna pokazuje zawsze **25.0°C**, to oznacza, że:
+- używasz temperatury modułu (nie otoczenia),
+- albo kolejne ramki temperatury nie są kwalifikowane i zostaje wartość początkowa,
+- albo driver ma domyślną wartość 25.0°C.
+
+Warto w debug UART zalogować też **surową** wartość temperatury z ramki.
+
+## Jak używać (Windows 11 + GitHub Desktop)
+
+1. `Clone` repo w GitHub Desktop.
+2. Otwórz w STM32CubeIDE.
+3. Skompiluj i wgraj na Nucleo-L432KC.
+4. UART2 @ 115200 → panel diagnostyczny.
+5. Podłącz OLED + czujniki → dane na ekranie.
